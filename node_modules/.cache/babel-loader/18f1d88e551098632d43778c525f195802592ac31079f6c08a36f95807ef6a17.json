{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darkh\\\\Desktop\\\\Ciclo 2 2023\\\\Paradigmas de la programaci\\xF3n\\\\Proyecto\\\\react-text-editor.v0\\\\src\\\\components\\\\KeywordChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { API_SERVER_URL } from './Url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordChecker = ({\n  text\n}) => {\n  _s();\n  const [isKeyword, setIsKeyword] = useState(false);\n  useEffect(() => {\n    fetch(`${API_SERVER_URL}/word?key=${text}`).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(data => setIsKeyword(data.isKeyword)).catch(error => console.error('Error checking if text is a keyword:', error));\n  }, [text]);\n  //return   //No rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", text, \" is a keyword: \", isKeyword.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordChecker, \"XVvvC+jHEL0QsoLSxQ/gN8mud+o=\");\n_c = KeywordChecker;\nexport default KeywordChecker;\nvar _c;\n$RefreshReg$(_c, \"KeywordChecker\");","map":{"version":3,"names":["React","useState","useEffect","API_SERVER_URL","jsxDEV","_jsxDEV","KeywordChecker","text","_s","isKeyword","setIsKeyword","fetch","then","response","console","log","json","data","catch","error","children","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Darkh/Desktop/Ciclo 2 2023/Paradigmas de la programaciÃ³n/Proyecto/react-text-editor.v0/src/components/KeywordChecker.js"],"sourcesContent":["\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport {API_SERVER_URL} from './Url';\r\n\r\nconst KeywordChecker = ({ text }) => {\r\n  const [isKeyword, setIsKeyword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch(`${API_SERVER_URL}/word?key=${text}`)\r\n      .then((response) => {console.log(response);return response.json();})\r\n      .then((data) => setIsKeyword(data.isKeyword))\r\n      .catch((error) => console.error('Error checking if text is a keyword:', error));\r\n  }, [text]);\r\n  //return   //No rendering\r\n  return (\r\n    <div>\r\n      <p> {text} is a keyword: {isKeyword.toString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeywordChecker;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEhD,SAAQC,cAAc,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IAEdS,KAAK,CAAE,GAAER,cAAe,aAAYI,IAAK,EAAC,CAAC,CACxCK,IAAI,CAAEC,QAAQ,IAAK;MAACC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAAC,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC,CACnEJ,IAAI,CAAEK,IAAI,IAAKP,YAAY,CAACO,IAAI,CAACR,SAAS,CAAC,CAAC,CAC5CS,KAAK,CAAEC,KAAK,IAAKL,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC,CAAC;EACnF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EACV;EACA,oBACEF,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,GAAG,GAAC,EAACb,IAAI,EAAC,iBAAe,EAACE,SAAS,CAACY,QAAQ,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhBIF,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}